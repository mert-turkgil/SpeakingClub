@model IndexModel
@inject LanguageService Localizer
@{
    ViewData["Title"] = "Home Page";
}
@section Css{
    <link rel="stylesheet" href="https://unpkg.com/aos@2.3.4/dist/aos.css" />
    <link rel="stylesheet" href="~/css/Slide.css" />
    <link rel="stylesheet" href="~/css/splash.css" /> 
    <style>
      .video-container {
        position: relative;
        width: 100%;
        padding-bottom: 56.25%; /* 16:9 Aspect Ratio */
        height: 0;
        overflow: hidden;
      }
      .video-container iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
      }
    </style>
    <style>
    .blog-card-link {
      text-decoration: none;
      color: inherit;
      display: block;
    }
    .blog-card {
      background: #fff;
      border: 1px solid #ddd;
      padding: 20px;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      overflow: hidden;
      height: 100%;
    }
    .blog-card:hover {
      transform: scale(1.05);
      box-shadow: 0 10px 20px rgba(0,0,0,0.15);
    }
    .blog-content-preview {
      max-height: 60px;
      overflow: hidden;
      transition: max-height 0.3s ease;
    }
    .blog-card:hover .blog-content-preview {
      max-height: 200px; /* Adjust as needed to show more text */
    }
    .blog-date {
      display: block;
      margin-top: 10px;
      font-size: 0.9em;
      color: #888;
    }
</style>
    }
<main>
<section>
    <div data-aos="fade-down">
        @await Component.InvokeAsync("Slide")
    </div>
</section>
<!-- Hero Section: Introduction -->
<section class="hero pb-5">
  <div id="Isik" class="container-fluid">
    <div id="overlayText">
      <h1>@Localizer.GetKey("Logo").Value</h1>
      <span class="subtext">@Localizer.GetKey("Reklam").Value</span><br>
      <a asp-controller="Account" asp-action="Account" class="btn btn-light">@Localizer.GetKey("Register_Title").Value</a>
    </div>
    <canvas id="three-canvas"></canvas>
  </div>
</section>
<!-- Video Grid Section -->
<section class="video-grid py-5 bg-alt">
  <div class="container">
    <div class="row">
      <div class="col-12 col-md-4 mb-4">
        <div class="video-container">
          <iframe src="https://www.youtube.com/embed/GghnZjCahX0?si=XbEyDDN6ky9QKKQx" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        </div>
      </div>
      <div class="col-12 col-md-4 mb-4">
        <div class="video-container">
          <iframe src="https://www.youtube.com/embed/x-tX7WTu08o?si=ug28IJvh3GKNCCfH" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        </div>
      </div>
      <div class="col-12 col-md-4 mb-4">
        <div class="video-container">
          <iframe src="https://www.youtube.com/embed/KbYtsT-596U?si=GMu_NW5fJLD_Htl-" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        </div>
      </div>
    </div>
  </div>
</section>
<section class="blog-grid-section py-5">
    <div class="container">
        <div class="row">
            @foreach (var blog in Model.BlogItems)
            {
                @await Html.PartialAsync("_blogCart", blog)
            }
        </div>
    </div>
</section>
</main>
  @section Scripts {
    <script>
      window.localizedSplashMessage = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(_localization.GetKey("SplashMessage").Value));
    </script>
    <!-- Three.js -->
      <script type="importmap">
      {
        "imports": {
          "three": "/lib/three/build/three.module.js"
        }
      }
    </script>
    <!-- Load splash.js as an ES Module -->
    <script type="module" src="~/js/splash.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/dat.gui@0.7.9/build/dat.gui.module.js" type="module"></script>
    <script type="module" src="~/js/anime.js"></script> 
        <!-- GSAP -->
    <script src="~/lib/gsap/gsap.min.js"></script>
    <script src="~/lib/gsap/ScrollTrigger.min.js"></script>
    <script>
    gsap.registerPlugin(ScrollTrigger); // <-- Register explicitly
    </script>
            <script>
        var swiper = new Swiper('.blog-card .swiper', {
            loop: true,
            pagination: {
                el: '.swiper-pagination',
                clickable: true,
            },
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
        });

        gsap.from('.blog-card', {
            opacity: 0,
            y: 30,
            duration: 0.8,
            ease: "power2.out",
            scrollTrigger: {
                trigger: '.blog-card',
                start: "top 90%"
            }
        });

        document.querySelectorAll('.blog-card').forEach(card => {
            card.addEventListener('mouseenter', () => {
                gsap.to(card, { scale: 1.03, duration: 0.3 });
            });
            card.addEventListener('mouseleave', () => {
                gsap.to(card, { scale: 1, duration: 0.3 });
            });
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.js"></script>
    <script>
      AOS.init();
    </script>
  } 