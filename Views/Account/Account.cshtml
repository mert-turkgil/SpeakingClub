@model SpeakingClub.Identity.User
@inject LanguageService _localization

@{
    ViewData["Title"] = _localization.GetKey("MyAccount_Title");
    var userLevel = ViewBag.UserLevel as string;
    var progress = ViewBag.Progress != null ? Convert.ToDouble(ViewBag.Progress) : 0;
    bool hasQuizData = ViewBag.HasQuizData != null && (bool)ViewBag.HasQuizData;
    bool canAccessDashboard = User.IsInRole("Admin") || User.IsInRole("Teacher") || User.IsInRole("Root");
}
@section Css {
    <link rel="stylesheet" href="~/lib/animate.css/animate.min.css" />
    <style>
        .account-container {
            max-width: 700px;
            margin: auto;
            padding-top: 40px;
        }

        .card-hover {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .card-hover:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 20px rgba(0,0,0,0.1);
        }

        .btn-custom {
            border-radius: 25px;
            padding: 8px 25px;
        }

        .delete-btn:hover {
            background-color: #dc3545;
            color: white;
        }

        .progress-circle {
            width: 100px;
            height: 100px;
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            margin-left: auto;
        }

        .progress-circle svg {
            transform: rotate(-90deg);
        }

        .progress-circle .circle-bg {
            fill: none;
            stroke: #eee;
            stroke-width: 8;
        }

        .progress-circle .circle {
            fill: none;
            stroke-width: 8;
            stroke-linecap: round;
            stroke: #00b4d8;
            stroke-dasharray: 283;
            stroke-dashoffset: calc(283 - (283 * var(--percent)) / 100);
            animation: progress 1.5s ease-out forwards;
        }

        @@keyframes progress {
            from { stroke-dashoffset: 283; }
            to { stroke-dashoffset: calc(283 - (283 * var(--percent)) / 100); }
        }

        .level-text {
            position: absolute;
            font-size: 20px;
            font-weight: bold;
        }

        .no-quiz-data {
            font-size: 14px;
            color: #888;
            text-align: right;
        }
    </style>
}
<div class="container account-container animate__animated animate__fadeIn">

    <h2 class="mb-5 text-center fw-bold">@_localization.GetKey("MyAccount_Header")</h2>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success animate__animated animate__fadeInDown">
            @TempData["Success"]
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger animate__animated animate__shakeX">
            @TempData["Error"]
        </div>
    }

    <div class="card shadow-sm card-hover mb-4 animate__animated animate__fadeInUp">
        <div class="card-body d-flex justify-content-between align-items-center">
            <div>
                <h5 class="card-title">@_localization.GetKey("AccountDetails")</h5>
                <p class="text-muted mb-1"><strong>@_localization.GetKey("FirstName"):</strong> @Model.FirstName</p>
                <p class="text-muted mb-1"><strong>@_localization.GetKey("LastName"):</strong> @Model.LastName</p>
                <p class="text-muted"><strong>@_localization.GetKey("Age"):</strong> @Model.Age</p>
                @if (canAccessDashboard)
                {
                    <a asp-area="Admin" asp-controller="Dashboard" asp-action="Index" class="btn btn-info btn-custom mt-3">@_localization.GetKey("GoToDashboard")</a>
                }
            </div>
            @if(hasQuizData)
            {
                <div class="progress-circle" style="--percent: @progress;">
                    <svg width="100" height="100">
                        <circle class="circle-bg" cx="50" cy="50" r="45"></circle>
                        <circle class="circle" cx="50" cy="50" r="45"></circle>
                    </svg>
                    <span class="level-text">@userLevel</span>
                </div>
            }
            else
            {
                <div class="d-flex flex-column align-items-center justify-content-center">
                    <div class="progress-circle" style="--percent: @progress;">
                        <svg width="100" height="100">
                            <circle class="circle-bg" cx="50" cy="50" r="45"></circle>
                            <circle class="circle" cx="50" cy="50" r="45"></circle>
                        </svg>
                        <span class="level-text">?</span>
                    </div>
                    <span class="no-quiz-data mt-2">@_localization.GetKey("NoQuizData")</span>
                </div>
            }
        </div>
    </div>

    <div class="card shadow-sm card-hover mb-4 animate__animated animate__fadeInUp animate__delay-1s">
        <div class="card-body d-flex justify-content-between align-items-center">
            <div>
                <h5 class="card-title">@_localization.GetKey("ManagePassword")</h5>
                <p class="text-muted">@_localization.GetKey("ManagePasswordText")</p>
            </div>
            <a asp-action="ChangePassword" class="btn btn-primary btn-custom">@_localization.GetKey("ChangePassword")</a>
        </div>
    </div>

    <div class="card shadow-sm card-hover mb-4 animate__animated animate__fadeInUp animate__delay-2s">
        <div class="card-body d-flex justify-content-between align-items-center">
            <div>
                <h5 class="card-title">@_localization.GetKey("MyQuizzesLevels")</h5>
                <p class="text-muted">@_localization.GetKey("MyQuizzesLevelsText")</p>
            </div>
            <a asp-action="Quizzes" class="btn btn-success btn-custom">@_localization.GetKey("GoToQuizzes")</a>
        </div>
    </div>

    <div class="card shadow-sm card-hover animate__animated animate__fadeInUp animate__delay-3s my-3">
        <div class="card-body">
            <h5 class="card-title text-danger">@_localization.GetKey("DeleteAccount")</h5>
            <p class="text-muted">@_localization.GetKey("DeleteAccountText")</p>
            <form asp-action="DeleteAccount" method="post" onsubmit="return confirm('@_localization.GetKey("DeleteAccountConfirm")');">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-outline-danger btn-custom delete-btn">@_localization.GetKey("DeleteAccountButton")</button>
            </form>
        </div>
    </div>

</div>